diff --git a/node_modules/content-type/index.js b/node_modules/content-type/index.js
index 41840e7..45a6940 100644
--- a/node_modules/content-type/index.js
+++ b/node_modules/content-type/index.js
@@ -54,6 +54,8 @@ var TYPE_REGEXP = /^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/
 exports.format = format
 exports.parse = parse
 
+const formatCache = new Map();
+
 /**
  * Format object to media type.
  *
@@ -67,10 +69,15 @@ function format (obj) {
     throw new TypeError('argument obj is required')
   }
 
+  const cacheKey = JSON.stringify(obj);
+  if (formatCache.has(cacheKey)) {
+    return formatCache.get(cacheKey);
+  }
+
   var parameters = obj.parameters
   var type = obj.type
 
-  if (!type || !TYPE_REGEXP.test(type)) {
+  if (!TYPE_REGEXP.test(type)) {
     throw new TypeError('invalid type')
   }
 
@@ -92,9 +99,13 @@ function format (obj) {
     }
   }
 
+  formatCache.set(cacheKey, string);
+
   return string
 }
 
+const parseCache = new Map();
+
 /**
  * Parse media type to object.
  *
@@ -117,6 +128,10 @@ function parse (string) {
     throw new TypeError('argument string is required to be a string')
   }
 
+  if (parseCache.has(header)) {
+    return JSON.parse(parseCache.get(header));
+  }
+
   var index = header.indexOf(';')
   var type = index !== -1
     ? header.slice(0, index).trim()
@@ -163,6 +178,8 @@ function parse (string) {
     }
   }
 
+  parseCache.set(header, JSON.stringify(obj));
+
   return obj
 }
 
@@ -177,16 +194,12 @@ function parse (string) {
 function getcontenttype (obj) {
   var header
 
-  if (typeof obj.getHeader === 'function') {
+  if (obj.getHeader) {
     // res-like
     header = obj.getHeader('content-type')
-  } else if (typeof obj.headers === 'object') {
+  } else if (obj.headers) {
     // req-like
-    header = obj.headers && obj.headers['content-type']
-  }
-
-  if (typeof header !== 'string') {
-    throw new TypeError('content-type header is missing from object')
+    header = obj.headers['content-type']
   }
 
   return header
